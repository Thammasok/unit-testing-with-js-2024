<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="36" failures="0" errors="0" time="0.898">
  <testsuite name="Spy self" errors="0" failures="0" skipped="0" timestamp="2024-07-15T04:13:32" time="0.17" tests="1">
    <testcase classname="Spy self Should be called add when call doubleSum" name="Spy self Should be called add when call doubleSum" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2024-07-15T04:13:32" time="0.053" tests="2">
    <testcase classname=" " name=" " time="0.004">
    </testcase>
    <testcase classname="Scoped / Nested block " name="Scoped / Nested block " time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Spy library" errors="0" failures="0" skipped="0" timestamp="2024-07-15T04:13:32" time="0.041" tests="2">
    <testcase classname="Spy library Should be called from findIndex with spy" name="Spy library Should be called from findIndex with spy" time="0">
    </testcase>
    <testcase classname="Spy library Should be return user info from keyword with spy" name="Spy library Should be return user info from keyword with spy" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Basic Mock solution 1" errors="0" failures="0" skipped="0" timestamp="2024-07-15T04:13:32" time="0.028" tests="2">
    <testcase classname="Basic Mock solution 1 should return 23 when call doubleSum and send 1 and 2" name="Basic Mock solution 1 should return 23 when call doubleSum and send 1 and 2" time="0">
    </testcase>
    <testcase classname="Basic Mock solution 1 should return 23 when call doubleSum and send 10 and 2" name="Basic Mock solution 1 should return 23 when call doubleSum and send 10 and 2" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2024-07-15T04:13:32" time="0.031" tests="2">
    <testcase classname=" add 1 + 2 to equal 3" name=" add 1 + 2 to equal 3" time="0.001">
    </testcase>
    <testcase classname="matching cities to foods add 3 + 4 to equal 7" name="matching cities to foods add 3 + 4 to equal 7" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2024-07-15T04:13:32" time="0.03" tests="2">
    <testcase classname=" add 1 + 2 to equal 3" name=" add 1 + 2 to equal 3" time="0.003">
    </testcase>
    <testcase classname=" add 3 + 4 to equal 7" name=" add 3 + 4 to equal 7" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Spy" errors="0" failures="0" skipped="0" timestamp="2024-07-15T04:13:32" time="0.026" tests="2">
    <testcase classname="Spy Should be called add when call doubleSum" name="Spy Should be called add when call doubleSum" time="0">
    </testcase>
    <testcase classname="Spy Should be return 9 when call doubleSum and send 2, 2" name="Spy Should be return 9 when call doubleSum and send 2, 2" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="exceptions" errors="0" failures="0" skipped="0" timestamp="2024-07-15T04:13:32" time="0.026" tests="1">
    <testcase classname="exceptions compiling android goes as expected" name="exceptions compiling android goes as expected" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="mock" errors="0" failures="0" skipped="0" timestamp="2024-07-15T04:13:33" time="0.027" tests="2">
    <testcase classname="mock Should be index from keyword without mock" name="mock Should be index from keyword without mock" time="0.001">
    </testcase>
    <testcase classname="mock Should be index from keyword with mock" name="mock Should be index from keyword with mock" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2024-07-15T04:13:33" time="0.025" tests="2">
    <testcase classname=" add 1 + 2 to equal 3" name=" add 1 + 2 to equal 3" time="0">
    </testcase>
    <testcase classname=" add 3 + 4 to equal 7" name=" add 3 + 4 to equal 7" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2024-07-15T04:13:33" time="0.021" tests="1">
    <testcase classname=" the data is peanut butter" name=" the data is peanut butter" time="0">
    </testcase>
  </testsuite>
  <testsuite name="truthiness" errors="0" failures="0" skipped="0" timestamp="2024-07-15T04:13:33" time="0.021" tests="2">
    <testcase classname="truthiness null" name="truthiness null" time="0.001">
    </testcase>
    <testcase classname="truthiness zero" name="truthiness zero" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2024-07-15T04:13:33" time="0.025" tests="4">
    <testcase classname=" the data is peanut butter" name=" the data is peanut butter" time="0">
    </testcase>
    <testcase classname=" the fetch fails with an error" name=" the fetch fails with an error" time="0">
    </testcase>
    <testcase classname=" the data is peanut butter" name=" the data is peanut butter" time="0">
    </testcase>
    <testcase classname=" the fetch fails with an error" name=" the fetch fails with an error" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Basic Mock solution 2" errors="0" failures="0" skipped="0" timestamp="2024-07-15T04:13:33" time="0.022" tests="2">
    <testcase classname="Basic Mock solution 2 should return 20 when call doubleSum and send 1 and 2" name="Basic Mock solution 2 should return 20 when call doubleSum and send 1 and 2" time="0.001">
    </testcase>
    <testcase classname="Basic Mock solution 2 should return 110 when call doubleSum and send 1 and 2" name="Basic Mock solution 2 should return 110 when call doubleSum and send 1 and 2" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2024-07-15T04:13:33" time="0.02" tests="2">
    <testcase classname=" the data is peanut butter" name=" the data is peanut butter" time="0">
    </testcase>
    <testcase classname=" the fetch fails with an error" name=" the fetch fails with an error" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2024-07-15T04:13:33" time="0.021" tests="1">
    <testcase classname=" message" name=" message" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="array" errors="0" failures="0" skipped="0" timestamp="2024-07-15T04:13:33" time="0.019" tests="1">
    <testcase classname="array the shopping list has milk on it" name="array the shopping list has milk on it" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="strings" errors="0" failures="0" skipped="0" timestamp="2024-07-15T04:13:33" time="0.022" tests="2">
    <testcase classname="strings there is no I in team" name="strings there is no I in team" time="0">
    </testcase>
    <testcase classname="strings but there is a &quot;stop&quot; in Christoph" name="strings but there is a &quot;stop&quot; in Christoph" time="0">
    </testcase>
  </testsuite>
  <testsuite name="number" errors="0" failures="0" skipped="0" timestamp="2024-07-15T04:13:33" time="0.02" tests="2">
    <testcase classname="number two plus two" name="number two plus two" time="0">
    </testcase>
    <testcase classname="number adding floating point numbers" name="number adding floating point numbers" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Math function" errors="0" failures="0" skipped="0" timestamp="2024-07-15T04:13:33" time="0.02" tests="1">
    <testcase classname="Math function should add 5 by 3" name="Math function should add 5 by 3" time="0.001">
    </testcase>
  </testsuite>
</testsuites>